{"version":3,"sources":["../src/date-input.jsx"],"names":["separators","LEFT","UP","RIGHT","DOWN","defaultDate","Date","get","day","month","year","set","noop","lastDay","date","getFullYear","getMonth","getDate","noLiteral","type","DateInput","props","MonthInput","throwNotImplementedPlugin","Error","DateInputBase","fmt","createFormatter","parser","createParser","numberFormatter","createNumberFormatter","numberParser","createNumberParser","placeholders","getDisplayNames","state","value","defaultValue","NEXT","PREV","myRefs","defaultValues","inputSizes","isInitialized","filter","forEach","length","setState","origDay","numericValue","getTime","setDate","aux","map","part","reduce","string","Math","min","triggerOnChange","event","indexOf","key","next","move","focus","select","keyCode","setTimeout","preventDefault","Object","keys","every","direction","parts","reverse","onChange","isValid","className","style","locale","i","self","handleChange","bind","handleKeyDown","handleKeyPress","propTypes","instanceOf","func","object"],"mappings":"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","file":"date-input.js","sourcesContent":["import React, {Component, PropTypes} from \"react\";\n\nconst separators = \"/.- \";\n\nconst LEFT = 37;\nconst UP = 38;\nconst RIGHT = 39;\nconst DOWN = 40;\nconst defaultDate = new Date(2016, 11, 28);\n\nconst get = {\n  day: \"getDate\",\n  month: \"getMonth\",\n  year: \"getFullYear\"\n};\n\nconst set = {\n  day: \"setDate\",\n  month: \"setMonth\",\n  year: \"setFullYear\"\n};\n\nfunction noop() {}\n\nfunction lastDay(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n}\n\nfunction noLiteral({type}) {\n  return type !== \"literal\";\n}\n\nexport class DateInput extends Component {\n  render() {\n    return (\n      <DateInputBase {...this.props} dateStyle=\"date-short\" />\n    );\n  }\n}\n\nexport class MonthInput extends Component {\n  render() {\n    return (\n      <DateInputBase {...this.props} dateStyle=\"yM\" />\n    );\n  }\n}\n\nfunction throwNotImplementedPlugin() {\n  throw new Error(\n    \"Plugin your desired i18n library, e.g., import \\\"date-input/src/plugin-globalize\\\"\"\n  );\n}\n\nexport default class DateInputBase extends Component {\n  static createFormatter = throwNotImplementedPlugin;\n  static createParser = throwNotImplementedPlugin;\n  static createNumberFormatter = throwNotImplementedPlugin;\n  static createNumberParser = throwNotImplementedPlugin;\n  static getDisplayNames = throwNotImplementedPlugin;\n\n  static propTypes = {\n    className: PropTypes.string,\n    defaultValue: PropTypes.instanceOf(Date),\n    locale: PropTypes.string,\n    onChange: PropTypes.func,\n    style: PropTypes.object,\n    value: PropTypes.instanceOf(Date)\n  };\n\n  constructor(props) {\n    super(props);\n    this.fmt = DateInputBase.createFormatter(props);\n    this.parser = DateInputBase.createParser(props);\n    this.numberFormatter = DateInputBase.createNumberFormatter(props);\n    this.numberParser = DateInputBase.createNumberParser(props);\n    this.placeholders = DateInputBase.getDisplayNames(props);\n    this.state = {\n      date: props.value || props.defaultValue || new Date()\n    };\n\n    // TODO: Reverse on RTL locale.\n    this.NEXT = RIGHT;\n    this.PREV = LEFT;\n\n    this.myRefs = {};\n    this.defaultValues = {};\n    this.inputSizes = {};\n    this.isInitialized = {};\n    this.fmt(defaultDate).filter(noLiteral).forEach(({type, value}) => {\n      this.defaultValues[type] = value;\n      this.inputSizes[type] = value.length;\n      this.isInitialized[type] = !(props.value === null || props.defaultValue === null);\n    });\n  }\n\n  componentWillReceiveProps({value}) {\n    if (value === null) {\n      this.fmt(defaultDate).filter(noLiteral).forEach(({type}) => {\n        this.isInitialized[type] = false;\n      });\n    } else if (value) {\n      this.setState({date: value});\n    }\n  }\n\n  handleChange(type) {\n    let origDay, numericValue;\n    let {value} = this.myRefs[type];\n    let {date} = this.state;\n\n    // Special handling for zero-padded numbers.\n    // - backspacing zero-padded numbers, e.g., backspacing \"03\" becomes \"0\"\n    //   that should actually be handled as \"\".\n    // - trying to enter \"30\" takes the following steps:\n    //   - enter 3, value changes from \"\" to \"3\" and formatted becomes \"03\";\n    //   - enter 0, value changes from \"03\" to \"030\" (sliced \"30\") and formatted\n    //     becomes \"30\". Note that it only works if sliced.\n    if (value) {\n      numericValue = this.numberParser(value);\n      if (numericValue === 0) {\n        value = \"\";\n      } else {\n        value = this.numberFormatter(numericValue);\n      }\n    }\n\n    this.isInitialized[type] = !!value.length;\n\n    // Special handling for type \"month\" and \"year\": handle day limit.\n    if (type === \"month\" || type === \"year\") {\n      date = new Date(date.getTime());\n      origDay = date.getDate();\n      date.setDate(1);\n    }\n\n    let aux = this.fmt(date).map(part => {\n      if (part.type === type) {\n        return {type, value};\n      }\n      return part;\n    }).reduce((string, part) => {\n      let {type, value} = part;\n      if (type === \"literal\") {\n        return string + value;\n      }\n      value = this.isInitialized[type] ? value : this.defaultValues[type];\n      return string + value;\n    }, \"\");\n    aux = this.parser(aux);\n\n    if (aux) {\n\n      // Special handling for type \"month\" and \"year\": handle day limit.\n      if (type === \"month\" || type === \"year\") {\n        aux.setDate(Math.min(origDay, lastDay(aux)));\n      }\n\n      this.setState({date: aux});\n      this.triggerOnChange(aux);\n    }\n  }\n\n  handleKeyPress(type, event) {\n    // If key is a separator, focus next element.\n    if (separators.indexOf(event.key) !== -1) {\n      let next = this.move(type, \"next\");\n      if (next) {\n        this.myRefs[next.type].focus();\n        this.myRefs[next.type].select();\n      }\n    }\n  }\n\n  handleKeyDown(type, event) {\n    if (event.keyCode === this.NEXT || event.keyCode === this.PREV) {\n      let next = this.move(type, event.keyCode === this.NEXT ? \"next\" : \"prev\");\n      if (next) {\n        setTimeout(() => {\n          this.myRefs[next.type].focus();\n          this.myRefs[next.type].select();\n        });\n      }\n    } else if (event.keyCode === UP || event.keyCode === DOWN) {\n      let origDay;\n      let date = new Date(this.state.date.getTime());\n      event.preventDefault();\n      if (type === \"month\" || type === \"year\") {\n        origDay = date.getDate();\n        date.setDate(1);\n      }\n      date[set[type]](+ date[get[type]]() + (event.keyCode === UP ? 1 : -1));\n      if (type === \"month\" || type === \"year\") {\n        date.setDate(Math.min(origDay, lastDay(date)));\n      }\n      this.setState({date});\n      this.triggerOnChange(date);\n    }\n  }\n\n  isValid() {\n    return Object.keys(this.isInitialized)\n      .map(type => this.isInitialized[type])\n      .every(value => value === true);\n  }\n\n  move(type, direction) {\n    let aux;\n    let parts = this.fmt(this.state.date);\n    if (direction === \"prev\") {\n      parts = parts.reverse();\n    }\n    return parts.filter(part => {\n      if (aux && part.type !== \"literal\") {\n        aux = false;\n        return true;\n      }\n      if (part.type === type) {\n        aux = true;\n      }\n      return false;\n    })[0];\n  }\n\n  triggerOnChange(date) {\n    const {onChange = noop} = this.props;\n    if (!this.isValid()) {\n      return;\n    }\n    onChange(date);\n  }\n\n  render() {\n    const {className, style, locale} = this.props;\n    const parts = this.fmt(this.state.date);\n\n    return (\n      <div lang={locale} className={className} style={style}>\n        {parts.map((part, i) => {\n          let {type, value} = part;\n          if (type === \"literal\") {\n            return (\n              <span key={i}>{value}</span>\n            );\n          }\n          value = this.isInitialized[type] ? value : \"\";\n          return (\n            <input\n              key={i}\n              ref={self => this.myRefs[type] = self}\n              name={type}\n              value={value}\n              onChange={this.handleChange.bind(this, type)}\n              onKeyDown={this.handleKeyDown.bind(this, type)}\n              onKeyPress={this.handleKeyPress.bind(this, type)}\n              placeholder={this.placeholders[type]}\n              size={this.inputSizes[type]}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n"]}